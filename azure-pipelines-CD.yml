trigger:
  branches:
    include:
      - main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  imageName: 'valberxz21/fcg.api'
  imageTag: 'latest'

stages:
- stage: BuildAndTest
  displayName: Build and Test
  jobs:
  - job: BuildAndTest
    displayName: Build and Test Job
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET 8 SDK'
      inputs:
        packageType: 'sdk'
        version: '8.0.x'

    - task: DotNetCoreCLI@2
      displayName: 'Restore solution'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build solution'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--no-restore --configuration Release'

    - task: DotNetCoreCLI@2
      displayName: 'Run unit tests'
      inputs:
        command: 'test'
        projects: 'tests/FCG.Tests/FCG.Tests.csproj'
        arguments: '--no-build --configuration Release'
        publishTestResults: true

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'XPlat'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.cobertura.xml'

    - task: DotNetCoreCLI@2
      displayName: 'Run BDD tests'
      inputs:
        command: 'test'
        projects: 'tests/FCG.Tests/FCG.BDD.Tests.csproj'
        arguments: '--no-build --configuration Release'
        publishTestResults: true

    - task: PublishCodeCoverageResults@2
      inputs:
        codeCoverageTool: 'XPlat'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.cobertura.xml'

- stage: CD
  displayName: Build and Push Docker Image to DockerHub
  jobs:
  - job: PushToDockerHub
    displayName: Build and Push Docker Image
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self

    - task: Docker@2
      displayName: Docker Login
      inputs:
        command: login
        containerRegistry: DockerHubConnection

    - task: Docker@2
      displayName: Build Docker image
      inputs:
        command: build
        dockerfile: src/FCG.API/Dockerfile
        buildContext: $(Build.SourcesDirectory)/src
        tags: |
          $(imageName):$(imageTag)

    - task: Docker@2
      displayName: Push Docker image to DockerHub
      inputs:
        command: push
        tags: |
          $(imageName):$(imageTag)

    - task: AzureCLI@2
      displayName: 'Deploy to Azure Container App'
      inputs:
        azureSubscription: 'AzureServiceConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az config set extension.use_dynamic_install=yes_without_prompt
          
          az containerapp update \
            --name fcg-app \
            --resource-group fcg-rg \
            --image valberxz21/fcg.api:latest \
            --container-name fcg-api-container

    - task: AzureWebAppContainer@1
      displayName: Deploy container image
      inputs:
        azureSubscription: 'AzureServiceConnection'
        appName: 'fcg-appservice'
        containers: '$(imageName):$(imageTag)'
