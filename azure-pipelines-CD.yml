trigger:
  branches:
    include:
      - main

variables:
  imageName: 'valberxz21/fcg-api'
  imageTag: '$(Build.BuildId)'
  azureSubscription: 'FCGConnection'
  webAppName: 'fcg49app'
  resourceGroup: 'FCG'

stages:

# --------------------------
- stage: Build
  displayName: '🐳 Build da Imagem Docker'
  jobs:
    - job: BuildImage
      steps:
        - task: DockerInstaller@0
          inputs:
            dockerVersion: 'latest'

        - script: |
            echo "🔨 Buildando imagem Docker com tag $(imageTag)"
            docker build --no-cache -f src/FCG.API/Dockerfile \
              -t $(imageName):$(imageTag) \
              -t $(imageName):latest .
          displayName: 'Build Docker Image'

# --------------------------
- stage: Push
  displayName: '📤 Push para Docker Hub'
  dependsOn: Build
  jobs:
    - job: PushImage
      steps:
        - task: Docker@2
          displayName: 'Login no Docker Hub'
          inputs:
            command: login
            containerRegistry: 'DockerHub-Valber'

        - task: Docker@2
          displayName: 'Push Docker image para Docker Hub'
          inputs:
            command: push
            tags: |
              $(imageName):$(imageTag)
              $(imageName):latest

# --------------------------
- stage: Inspect
  displayName: '🔎 Inspecionar Imagem Publicada'
  dependsOn: Push
  jobs:
    - job: InspectImage
      steps:
        - script: |
            echo "🕵️ Baixando imagem para inspeção..."
            docker pull $(imageName):$(imageTag)
            docker inspect $(imageName):$(imageTag) --format='Imagem: {{.RepoTags}} | SHA: {{.Id}}'
          displayName: 'Verificar digest da imagem'

# --------------------------
- stage: Deploy
  displayName: '🚀 Deploy para Azure WebApp'
  dependsOn: Inspect
  jobs:
    - job: DeployWebApp
      steps:
        - task: AzureWebAppContainer@1
          displayName: 'Deploy container image'
          inputs:
            azureSubscription: '$(azureSubscription)'
            appName: '$(webAppName)'
            containers: '$(imageName):$(imageTag)'

# --------------------------
- stage: Verify
  displayName: '🧪 Verificação do Deploy'
  dependsOn: Deploy
  jobs:
    - job: VerifyDeployedImage
      steps:
        - task: AzureCLI@2
          displayName: 'Verificar imagem rodando na WebApp'
          inputs:
            azureSubscription: '$(azureSubscription)'
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              echo "✅ Verificando imagem publicada no Azure Web App..."
              currentImage=$(az webapp config container show \
                --name $(webAppName) \
                --resource-group $(resourceGroup) \
                --query containers[0].image -o tsv)

              echo "📦 Imagem atual na WebApp: $currentImage"
              echo "🎯 Imagem esperada: $(imageName):$(imageTag)"

              if [ "$currentImage" == "$(imageName):$(imageTag)" ]; then
                echo "✅ Imagem correta está rodando."
              else
                echo "❌ A WebApp está com uma imagem diferente!"
                exit 1
              fi
